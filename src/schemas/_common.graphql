type Paging {
  page: Int!
  pageSize: Int!
}

scalar Date

type Query {
  userList(page: Int, pageSize: Int, filters: UserListFilters): UserList!
  userGet(id: ID): User

  gameList(page: Int, pageSize: Int, filters: GameListFilters): GameList!
  gameGet(id: ID): Game

  consoleList(page: Int, pageSize: Int, filters: ConsoleListFilters): ConsoleList!
  consoleGet(id: ID): Console
}

type Mutation {
  mediaInsert(data: MediaData!): Media
  mediaDestroy(id: ID!): Boolean

  userInsert(data: UserDataInsert!): User!
  userUpdate(data: UserDataUpdate!): User!
  userPassword(data: UserDataPassword!): Boolean!
  userDestroy(id: ID!): Boolean!
  userFriendInsert(data: UserFriendDataInsert!): UserFriend!
  userFriendUpdate(data: UserFriendDataUpdate!): UserFriend!
  userFriendDestroy(id: ID!): Boolean!
  userGameInsert(data: UserGameData!): User!
  userGameDestroy(id: ID!): Boolean!
  userConsoleInsert(data: UserConsoleData!): User!
  userConsoleDestroy(id: ID!): Boolean!

  gameInsert(data: GameData!): Game!
  gameUpdate(data: GameData!): Game!
  gameDestroy(id: ID!): Boolean
  gameRatingInsert(data: GameRatingData!): GameRating!
  gameRatingDestroy(id: ID!): Boolean
  gameCommentInsert(data: GameCommentData!): GameComment!
  gameCommentDestroy(id: ID!): Boolean

  consoleInsert(data: ConsoleData!): Console!
  consoleUpdate(data: ConsoleData!): Console!
  consoleDestroy(id: ID!): Boolean
}
